"0","alpha = 0.05"
"0","n_sims = 1000"
"0","p_vals = numeric(n_sims)"
"0",""
"0","# What was the observed standard deviation?"
"0","sd_obs  "
"1","[1]"
"1"," 0.1412668"
"1","
"
"0","# specify the number of different standard deviation values to simulate:"
"0","n_sds = 20"
"0","pop_sds = seq(from = 0.01, to = 1.5, length.out = n_sds)"
"0",""
"0","pop_sd_powers = numeric(n_sds)"
"0",""
"0",""
"0","for(j in 1:length(pop_sds))"
"0","{"
"0","  pop_sd_j = pop_sds[j]"
"0","  for(i in 1:n_sims)"
"0","  {"
"0","    fit_sim = linear_sim_fit("
"0","      x = birdhab$ls,"
"0","      y_int = int_obs,"
"0","      slope = slope_obs,"
"0","      st_dev = pop_sd_j"
"0","    )"
"0","    p_vals[i] = summary(fit_sim)$coefficients[2, 'Pr(>|t|)']"
"0","  }"
"0","  pop_sd_powers[j] = sum(p_vals < alpha) / n_sims"
"0","}"
"0",""
"0","sim_output_dispersion = data.frame("
"0","  sd = pop_sds,"
"0","  power = pop_sd_powers)"
"0",""
"0",""
"0","# You should save your simulation results so you don't have to run it every time."
"0","save("
"0","  sim_output_dispersion, "
"0","  file = here::here(""data"", ""lab_ll_dat_dispersion_sim.RData""))"
"0",""
"0","# Line plot of standard deviation (x-axis) and statistical power (y-axis)"
"0","{plot(power ~ sd, data = sim_output_dispersion,"
"0","     xlab = ""standard deviation"", ylab = ""power"", type = ""l"")"
"0",""
"0","# Add a dotted vertical red line at the observed population standard deviation value."
"0","abline(v = sd_obs, lty = 2, col = 'red')}"
